name: CI
on:
  push:
    branches:
      - master
  pull_request:

defaults:
  run:
    shell: bash

jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.julia-threads }} thread(s) - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    env:
      JULIA_NUM_THREADS: ${{ matrix.julia-threads }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1'
          - '1.6'
          - 'nightly'
        arch:
          - x64
        julia-threads:
          - '1'

        os:
          - ubuntu-latest
          - windows-latest
          - macOS-latest

        include:
          - os: ubuntu-latest
            version: '1'
            arch: x64
            julia-threads: '2'

    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - run: python --version
      - name: windows
        if: runner.os == 'Windows'
        run: JULIA_CONDAPKG_EXE="${CONDA}\_conda.exe" julia --project -e 'using Pkg; Pkg.test(; coverage=true)'
      - name: non-windows
        if: runner.os != 'Windows'
        run: JULIA_CONDAPKG_EXE=$CONDA/bin/conda julia --project -e 'using Pkg; Pkg.test(; coverage=true)'
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v1
        with:
          file: lcov.info

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: '1'
      - run: julia --project=docs/ -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd()));
                                               Pkg.instantiate()'
      - run: julia --project=docs docs/make.jl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
